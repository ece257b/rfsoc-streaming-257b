-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
-- Version: 2022.1
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity data_proc is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    in_stream_TDATA : IN STD_LOGIC_VECTOR (63 downto 0);
    in_stream_TVALID : IN STD_LOGIC;
    in_stream_TREADY : OUT STD_LOGIC;
    in_stream_TKEEP : IN STD_LOGIC_VECTOR (7 downto 0);
    in_stream_TSTRB : IN STD_LOGIC_VECTOR (7 downto 0);
    in_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    out_stream_TDATA : OUT STD_LOGIC_VECTOR (63 downto 0);
    out_stream_TVALID : OUT STD_LOGIC;
    out_stream_TREADY : IN STD_LOGIC;
    out_stream_TKEEP : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TSTRB : OUT STD_LOGIC_VECTOR (7 downto 0);
    out_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
end;


architecture behav of data_proc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "data_proc_data_proc,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu28dr-ffvg1517-2-e,HLS_INPUT_CLOCK=6.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=1.909000,HLS_SYN_LAT=1,HLS_SYN_TPT=1,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=7,HLS_SYN_LUT=104,HLS_VERSION=2022_1}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_iter0_fsm_state1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_ST_iter1_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_ST_iter1_fsm_state0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_FEAEFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000111111101010111011111111111111111111111111111111";
    constant ap_const_lv64_FFFF000000000000 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv4_9 : STD_LOGIC_VECTOR (3 downto 0) := "1001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";

    signal ap_rst_n_inv : STD_LOGIC;
    signal data_count_V : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal in_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    signal ap_CS_iter0_fsm_state1 : STD_LOGIC;
    signal ap_CS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    signal ap_CS_iter1_fsm_state2 : STD_LOGIC;
    signal out_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_predicate_op19_read_state1 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal regslice_both_out_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_phi_mux_output_word_data_V_phi_fu_98_p6 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter0_output_word_data_V_reg_94 : STD_LOGIC_VECTOR (63 downto 0);
    signal ret_V_fu_144_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln1560_fu_126_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln232_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln232_fu_138_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_iter0_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_iter1_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_iter0_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_iter1_fsm_state2_blk : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (63 downto 0);
    signal in_stream_TVALID_int_regslice : STD_LOGIC;
    signal in_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal regslice_both_in_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal in_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_in_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_in_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal out_stream_TVALID_int_regslice : STD_LOGIC;
    signal out_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_out_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal out_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_out_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_out_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component data_proc_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    regslice_both_in_stream_V_data_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TDATA,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_data_V_U_ack_in,
        data_out => in_stream_TDATA_int_regslice,
        vld_out => in_stream_TVALID_int_regslice,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_data_V_U_apdone_blk);

    regslice_both_in_stream_V_keep_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TKEEP,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_keep_V_U_ack_in,
        data_out => in_stream_TKEEP_int_regslice,
        vld_out => regslice_both_in_stream_V_keep_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_keep_V_U_apdone_blk);

    regslice_both_in_stream_V_strb_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TSTRB,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_strb_V_U_ack_in,
        data_out => in_stream_TSTRB_int_regslice,
        vld_out => regslice_both_in_stream_V_strb_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_strb_V_U_apdone_blk);

    regslice_both_in_stream_V_last_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => in_stream_TLAST,
        vld_in => in_stream_TVALID,
        ack_in => regslice_both_in_stream_V_last_V_U_ack_in,
        data_out => in_stream_TLAST_int_regslice,
        vld_out => regslice_both_in_stream_V_last_V_U_vld_out,
        ack_out => in_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_in_stream_V_last_V_U_apdone_blk);

    regslice_both_out_stream_V_data_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 64)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_phi_mux_output_word_data_V_phi_fu_98_p6,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => out_stream_TREADY_int_regslice,
        data_out => out_stream_TDATA,
        vld_out => regslice_both_out_stream_V_data_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_data_V_U_apdone_blk);

    regslice_both_out_stream_V_keep_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_FF,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => regslice_both_out_stream_V_keep_V_U_ack_in_dummy,
        data_out => out_stream_TKEEP,
        vld_out => regslice_both_out_stream_V_keep_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_keep_V_U_apdone_blk);

    regslice_both_out_stream_V_strb_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv8_FF,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => regslice_both_out_stream_V_strb_V_U_ack_in_dummy,
        data_out => out_stream_TSTRB,
        vld_out => regslice_both_out_stream_V_strb_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_strb_V_U_apdone_blk);

    regslice_both_out_stream_V_last_V_U : component data_proc_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => out_stream_TLAST_int_regslice,
        vld_in => out_stream_TVALID_int_regslice,
        ack_in => regslice_both_out_stream_V_last_V_U_ack_in_dummy,
        data_out => out_stream_TLAST,
        vld_out => regslice_both_out_stream_V_last_V_U_vld_out,
        ack_out => out_stream_TREADY,
        apdone_blk => regslice_both_out_stream_V_last_V_U_apdone_blk);





    ap_CS_iter0_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            else
                ap_CS_iter0_fsm <= ap_NS_iter0_fsm;
            end if;
        end if;
    end process;


    ap_CS_iter1_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_iter1_fsm <= ap_ST_iter1_fsm_state0;
            else
                ap_CS_iter1_fsm <= ap_NS_iter1_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                data_count_V <= ret_V_fu_144_p3;
            end if;
        end if;
    end process;

    ap_NS_iter0_fsm_assign_proc : process (ap_CS_iter0_fsm, ap_CS_iter1_fsm_state2, ap_predicate_op19_read_state1, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
        case ap_CS_iter0_fsm is
            when ap_ST_iter0_fsm_state1 => 
                ap_NS_iter0_fsm <= ap_ST_iter0_fsm_state1;
            when others =>  
                ap_NS_iter0_fsm <= "X";
        end case;
    end process;

    ap_NS_iter1_fsm_assign_proc : process (ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm, ap_CS_iter1_fsm_state2, ap_predicate_op19_read_state1, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
        case ap_CS_iter1_fsm is
            when ap_ST_iter1_fsm_state2 => 
                if ((not(((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)))) and not(((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                elsif ((not(((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))) and ((ap_const_logic_0 = ap_CS_iter0_fsm_state1) or ((ap_const_logic_1 = ap_CS_iter0_fsm_state1) and ((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0))))))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                end if;
            when ap_ST_iter1_fsm_state0 => 
                if ((not(((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state2;
                else
                    ap_NS_iter1_fsm <= ap_ST_iter1_fsm_state0;
                end if;
            when others =>  
                ap_NS_iter1_fsm <= "XX";
        end case;
    end process;
    add_ln1560_fu_126_p2 <= std_logic_vector(unsigned(data_count_V) + unsigned(ap_const_lv4_1));
    add_ln232_fu_138_p2 <= std_logic_vector(unsigned(data_count_V) + unsigned(ap_const_lv4_7));
    ap_CS_iter0_fsm_state1 <= ap_CS_iter0_fsm(0);
    ap_CS_iter1_fsm_state2 <= ap_CS_iter1_fsm(1);

    ap_ST_iter0_fsm_state1_blk_assign_proc : process(ap_predicate_op19_read_state1, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
        if (((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)))) then 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_iter0_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_iter1_fsm_state2_blk_assign_proc : process(regslice_both_out_stream_V_data_V_U_apdone_blk, out_stream_TREADY_int_regslice)
    begin
        if (((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))) then 
            ap_ST_iter1_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_iter1_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_predicate_op19_read_state1, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
                ap_block_state1_pp0_stage0_iter0 <= ((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state2_pp0_stage0_iter1_assign_proc : process(regslice_both_out_stream_V_data_V_U_apdone_blk, out_stream_TREADY_int_regslice)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_phi_mux_output_word_data_V_phi_fu_98_p6_assign_proc : process(data_count_V, ap_phi_reg_pp0_iter0_output_word_data_V_reg_94, in_stream_TDATA_int_regslice)
    begin
        if ((data_count_V = ap_const_lv4_0)) then 
            ap_phi_mux_output_word_data_V_phi_fu_98_p6 <= ap_const_lv64_FFFF000000000000;
        elsif ((data_count_V = ap_const_lv4_1)) then 
            ap_phi_mux_output_word_data_V_phi_fu_98_p6 <= ap_const_lv64_FEAEFFFFFFFF;
        elsif ((not((data_count_V = ap_const_lv4_1)) and not((data_count_V = ap_const_lv4_0)))) then 
            ap_phi_mux_output_word_data_V_phi_fu_98_p6 <= in_stream_TDATA_int_regslice;
        else 
            ap_phi_mux_output_word_data_V_phi_fu_98_p6 <= ap_phi_reg_pp0_iter0_output_word_data_V_reg_94;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_output_word_data_V_reg_94 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op19_read_state1_assign_proc : process(data_count_V)
    begin
                ap_predicate_op19_read_state1 <= (not((data_count_V = ap_const_lv4_1)) and not((data_count_V = ap_const_lv4_0)));
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    icmp_ln232_fu_132_p2 <= "1" when (unsigned(add_ln1560_fu_126_p2) < unsigned(ap_const_lv4_A)) else "0";

    in_stream_TDATA_blk_n_assign_proc : process(data_count_V, ap_CS_iter0_fsm_state1, in_stream_TVALID_int_regslice)
    begin
        if ((not((data_count_V = ap_const_lv4_1)) and not((data_count_V = ap_const_lv4_0)) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            in_stream_TDATA_blk_n <= in_stream_TVALID_int_regslice;
        else 
            in_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in_stream_TREADY <= regslice_both_in_stream_V_data_V_U_ack_in;

    in_stream_TREADY_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_predicate_op19_read_state1, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
        if ((not(((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))))) and (ap_predicate_op19_read_state1 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            in_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            in_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    out_stream_TDATA_blk_n_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, out_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_iter1_fsm_state2) or (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            out_stream_TDATA_blk_n <= out_stream_TREADY_int_regslice;
        else 
            out_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    out_stream_TLAST_int_regslice <= "1" when (data_count_V = ap_const_lv4_9) else "0";
    out_stream_TVALID <= regslice_both_out_stream_V_data_V_U_vld_out;

    out_stream_TVALID_int_regslice_assign_proc : process(ap_CS_iter0_fsm_state1, ap_CS_iter1_fsm_state2, ap_predicate_op19_read_state1, regslice_both_out_stream_V_data_V_U_apdone_blk, in_stream_TVALID_int_regslice, out_stream_TREADY_int_regslice)
    begin
        if ((not(((out_stream_TREADY_int_regslice = ap_const_logic_0) or ((ap_predicate_op19_read_state1 = ap_const_boolean_1) and (in_stream_TVALID_int_regslice = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_iter1_fsm_state2) and ((regslice_both_out_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or (out_stream_TREADY_int_regslice = ap_const_logic_0))))) and (ap_const_logic_1 = ap_CS_iter0_fsm_state1))) then 
            out_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            out_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    ret_V_fu_144_p3 <= 
        add_ln1560_fu_126_p2 when (icmp_ln232_fu_132_p2(0) = '1') else 
        add_ln232_fu_138_p2;
end behav;
